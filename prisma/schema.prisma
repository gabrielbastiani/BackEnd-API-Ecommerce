// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// criar uma migration: yarn prisma migrate dev

model User {
  id                String  @id @default(uuid())
  nameComplete      String  @db.VarChar(95)
  email             String  @unique @db.VarChar(80)
  password          String
  cpfOrCnpj         String? @db.VarChar(25)
  inscricaoEstadual String? @db.VarChar(55)
  phone             String? @db.VarChar(35)
  dataNascimento    String? @db.VarChar(25)
  genero            String? @db.VarChar(35)
  newslatter        Boolean @default(false)
  nomeDoRecebedor   String? @db.VarChar(95)
  address           String? @db.VarChar(405)
  cep               String? @db.VarChar(25)
  city              String? @db.VarChar(185)
  state             String? @db.VarChar(155)
  pais              String? @db.VarChar(25)

  authenticated Boolean @default(false)
  role          Role    @default(USER)

  pedidos Pedido[]

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("users")
}

enum Role {
  USER
  ADMIN
}

model PasswordRecovery {
  id    String @id @default(uuid())
  email String

  @@map("passwordRecoverys")
}

model Category {
  id           String @id @default(uuid())
  categoryName String @unique @db.VarChar(100)

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  products Product[]

  @@map("categories")
}

model Product {
  id                  String   @id @default(uuid())
  nameProduct         String   @db.VarChar(225)
  productPhoto        String[]
  descriptionProduct1 String?  @db.VarChar(725)
  descriptionProduct2 String?  @db.VarChar(725)
  descriptionProduct3 String?  @db.VarChar(725)
  descriptionProduct4 String?  @db.VarChar(725)
  descriptionProduct5 String?  @db.VarChar(725)
  descriptionProduct6 String?  @db.VarChar(725)
  price               String?  @db.VarChar(15)
  sku                 String?  @db.VarChar(25)
  estoque             String?  @db.VarChar(10)
  quantidade          Int?
  avaliacao           String?  @db.VarChar(15)
  pesoKG              Int?
  larguraCM           Int?
  alturaCM            Int?
  profundidadeCM      Int?
  promocao            Boolean  @default(false)
  freteGratis         Boolean  @default(false)

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  category    Category @relation(fields: [category_id], references: [id])
  category_id String

  variacoes Variacao[]

  @@map("products")
}

model Variacao {
  id           String  @id @default(uuid())
  nameVariacao String? @db.VarChar(225)

  product    Product @relation(fields: [product_id], references: [id])
  product_id String

  @@map("variacoes")
}

model Pedido {
  id                String  @id @default(uuid())
  nameClient        String  @db.VarChar(95)
  nameProduct       String  @db.VarChar(225)
  valorPedido       Int
  quantidadeDeItens Int
  statusDoPedido    Boolean @default(false)
  modoDePagamento   String  @db.VarChar(25)
  cancelar          Boolean @default(false)

  user     User   @relation(fields: [user_id], references: [id])
  user_id  String
  frete    Frete  @relation(fields: [frete_id], references: [id])
  frete_id String

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("pedidos")
}

model Frete {
  id                 String  @id @default(uuid())
  codigoRastreamento String? @db.VarChar(95)
  status             Boolean @default(false)
  custo              Int?
  prazoDeEntrega     String? @db.VarChar(95)

  nomeDoRecebedor String? @db.VarChar(95)
  address         String? @db.VarChar(405)
  cep             String? @db.VarChar(25)
  city            String? @db.VarChar(185)
  state           String? @db.VarChar(155)

  pedidos Pedido[]

  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("fretes")
}